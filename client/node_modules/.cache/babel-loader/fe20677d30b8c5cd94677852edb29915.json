{"ast":null,"code":"import axios from '../utils/axiosInstance';\nimport { GET_USER_RESULT, CALCULATION_ERROR, COMPUTE_RESULT } from './types';\nimport { loaderAction } from './auth';\n\nconst userResultsAction = activities => ({\n  type: GET_USER_RESULT,\n  results\n});\n\nconst computeResultAction = activity => ({\n  type: COMPUTE_RESULT,\n  calculation\n});\n\nconst activitiesError = message => ({\n  type: CALCULATION_ERROR,\n  message\n});\n\nexport const userResults = () => async dispatch => {\n  dispatch(loaderAction(true));\n\n  try {\n    const {\n      data\n    } = await axios.get('/todos');\n    dispatch(userResultsAction(data));\n    dispatch(loaderAction(false));\n  } catch ({\n    message\n  }) {\n    dispatch(activitiesError(message));\n  }\n};\nexport const computeResult = title => async dispatch => {\n  dispatch(loaderAction(true));\n\n  try {\n    const {\n      data\n    } = await axios.post('/todos', {\n      title\n    });\n    dispatch(computeResultAction(data));\n    dispatch(loaderAction(false));\n  } catch ({\n    message\n  }) {\n    dispatch(activitiesError(message));\n    dispatch(loaderAction(false));\n  }\n};","map":{"version":3,"sources":["/Users/frosty/Documents/React-Project/nu-binary/src/actions/calculationAction.js"],"names":["axios","GET_USER_RESULT","CALCULATION_ERROR","COMPUTE_RESULT","loaderAction","userResultsAction","activities","type","results","computeResultAction","activity","calculation","activitiesError","message","userResults","dispatch","data","get","computeResult","title","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,cAA7C,QAAmE,SAAnE;AACA,SAASC,YAAT,QAA6B,QAA7B;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,KAAK;AAAEC,EAAAA,IAAI,EAAEN,eAAR;AAAyBO,EAAAA;AAAzB,CAAL,CAApC;;AACA,MAAMC,mBAAmB,GAAGC,QAAQ,KAAK;AAAEH,EAAAA,IAAI,EAAEJ,cAAR;AAAwBQ,EAAAA;AAAxB,CAAL,CAApC;;AACA,MAAMC,eAAe,GAAGC,OAAO,KAAK;AAAEN,EAAAA,IAAI,EAAEL,iBAAR;AAA2BW,EAAAA;AAA3B,CAAL,CAA/B;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAACX,YAAY,CAAC,IAAD,CAAb,CAAR;;AACA,MAAI;AACH,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAU,QAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACV,iBAAiB,CAACW,IAAD,CAAlB,CAAR;AACAD,IAAAA,QAAQ,CAACX,YAAY,CAAC,KAAD,CAAb,CAAR;AACA,GAJD,CAIE,OAAO;AAACS,IAAAA;AAAD,GAAP,EAAkB;AACnBE,IAAAA,QAAQ,CAACH,eAAe,CAACC,OAAD,CAAhB,CAAR;AACA;AACD,CATM;AAWP,OAAO,MAAMK,aAAa,GAAGC,KAAK,IAAI,MAAOJ,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAACX,YAAY,CAAC,IAAD,CAAb,CAAR;;AACA,MAAI;AACH,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACoB,IAAN,CAAW,QAAX,EAAqB;AAACD,MAAAA;AAAD,KAArB,CAAvB;AACAJ,IAAAA,QAAQ,CAACN,mBAAmB,CAACO,IAAD,CAApB,CAAR;AACAD,IAAAA,QAAQ,CAACX,YAAY,CAAC,KAAD,CAAb,CAAR;AACA,GAJD,CAIE,OAAO;AAACS,IAAAA;AAAD,GAAP,EAAkB;AACnBE,IAAAA,QAAQ,CAACH,eAAe,CAACC,OAAD,CAAhB,CAAR;AACAE,IAAAA,QAAQ,CAACX,YAAY,CAAC,KAAD,CAAb,CAAR;AACA;AACD,CAVM","sourcesContent":["import axios from '../utils/axiosInstance';\nimport { GET_USER_RESULT, CALCULATION_ERROR, COMPUTE_RESULT } from './types';\nimport { loaderAction } from './auth';\n\nconst userResultsAction = activities => ({ type: GET_USER_RESULT, results });\nconst computeResultAction = activity => ({ type: COMPUTE_RESULT, calculation });\nconst activitiesError = message => ({ type: CALCULATION_ERROR, message });\n\nexport const userResults = () => async (dispatch) => {\n\tdispatch(loaderAction(true));\n\ttry {\n\t\tconst { data } = await axios.get('/todos');\n\t\tdispatch(userResultsAction(data));\n\t\tdispatch(loaderAction(false));\n\t} catch ({message}) {\n\t\tdispatch(activitiesError(message));\n\t}\n};\n\nexport const computeResult = title => async (dispatch) => {\n\tdispatch(loaderAction(true));\n\ttry {\n\t\tconst { data } = await axios.post('/todos', {title});\n\t\tdispatch(computeResultAction(data));\n\t\tdispatch(loaderAction(false));\n\t} catch ({message}) {\n\t\tdispatch(activitiesError(message));\n\t\tdispatch(loaderAction(false));\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}