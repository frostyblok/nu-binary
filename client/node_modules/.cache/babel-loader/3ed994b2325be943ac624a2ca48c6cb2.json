{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport { LOGIN_USER, SIGNUP_USER, USER_ERROR, SET_STATUS, LOGOUT } from '../actions/types';\nimport setStorage from '../helpers/setStorage';\nimport { baseUrl } from '../baseUrl';\n\nconst signinUserAction = payload => ({\n  type: LOGIN_USER,\n  payload\n});\n\nconst signupUserAction = payload => ({\n  type: SIGNUP_USER,\n  payload\n});\n\nexport const loaderAction = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const authError = error => ({\n  type: USER_ERROR,\n  error\n});\nexport const logoutAction = () => ({\n  type: LOGOUT\n});\n;\nexport const signinUser = user => dispatch => {\n  dispatch(loaderAction(true));\n  return axios.post(`${baseUrl}/auth`, { ...user\n  }).then(({\n    data\n  }) => {\n    setStorage('token', data.token);\n    const payload = jwtDecode(data.token);\n    dispatch(signinUserAction(payload));\n    dispatch(loaderAction(false));\n  }).catch(({\n    response: {\n      data\n    },\n    message\n  }) => {\n    toastr.error(data.message);\n    dispatch(authError(message));\n    dispatch(loaderAction(false));\n  });\n};\nexport const signupUser = user => dispatch => {\n  dispatch(loaderAction(true));\n  return axios.post(`${baseUrl}/auth/`, { ...user\n  }).then(data => {\n    debugger;\n    console.log(data.headers); // debugger\n    // setStorage('token', data.token);\n    // const payload = jwtDecode(data.token);\n    // dispatch(signupUserAction(payload));\n    // dispatch(loaderAction(false));\n  }).catch(({\n    response: {\n      data\n    },\n    message\n  }) => {// toastr.error(data.message);\n    // dispatch(authError(message));\n    // dispatch(loaderAction(false));\n  });\n};\nexport const logout = () => dispatch => {\n  dispatch(logoutAction());\n};","map":{"version":3,"sources":["/Users/frosty/Documents/React-Project/nu-binary/src/actions/userAction.js"],"names":["jwtDecode","axios","toastr","LOGIN_USER","SIGNUP_USER","USER_ERROR","SET_STATUS","LOGOUT","setStorage","baseUrl","signinUserAction","payload","type","signupUserAction","loaderAction","status","authError","error","logoutAction","signinUser","user","dispatch","post","then","data","token","catch","response","message","signupUser","console","log","headers","logout"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,UAA9C,EAA0DC,MAA1D,QAAwE,kBAAxE;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAAQC,OAAR,QAAsB,YAAtB;;AAGA,MAAMC,gBAAgB,GAAIC,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAET,UAAR;AAAoBQ,EAAAA;AAApB,CAAd,CAAzB;;AACA,MAAME,gBAAgB,GAAIF,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAER,WAAR;AAAqBO,EAAAA;AAArB,CAAd,CAAzB;;AACA,OAAO,MAAMG,YAAY,GAAIC,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEN,UAAP;AAAmBS,EAAAA;AAAnB,CAAb,CAArB;AACP,OAAO,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAAEL,EAAAA,IAAI,EAAEP,UAAR;AAAoBY,EAAAA;AAApB,CAAZ,CAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,OAAO;AAAEN,EAAAA,IAAI,EAAEL;AAAR,CAAP,CAArB;AAA8C;AAErD,OAAO,MAAMY,UAAU,GAAIC,IAAD,IAAWC,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAACP,YAAY,CAAC,IAAD,CAAb,CAAR;AACA,SAAOb,KAAK,CAACqB,IAAN,CAAY,GAAEb,OAAQ,OAAtB,EAA8B,EAAC,GAAGW;AAAJ,GAA9B,EACLG,IADK,CACA,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY;AACjBhB,IAAAA,UAAU,CAAC,OAAD,EAAUgB,IAAI,CAACC,KAAf,CAAV;AACA,UAAMd,OAAO,GAAGX,SAAS,CAACwB,IAAI,CAACC,KAAN,CAAzB;AACAJ,IAAAA,QAAQ,CAACX,gBAAgB,CAACC,OAAD,CAAjB,CAAR;AACAU,IAAAA,QAAQ,CAACP,YAAY,CAAC,KAAD,CAAb,CAAR;AACA,GANK,EAOLY,KAPK,CAOC,CAAC;AAACC,IAAAA,QAAQ,EAAE;AAACH,MAAAA;AAAD,KAAX;AAAmBI,IAAAA;AAAnB,GAAD,KAAiC;AACvC1B,IAAAA,MAAM,CAACe,KAAP,CAAaO,IAAI,CAACI,OAAlB;AACAP,IAAAA,QAAQ,CAACL,SAAS,CAACY,OAAD,CAAV,CAAR;AACAP,IAAAA,QAAQ,CAACP,YAAY,CAAC,KAAD,CAAb,CAAR;AACA,GAXK,CAAP;AAYA,CAdM;AAgBP,OAAO,MAAMe,UAAU,GAAIT,IAAD,IAAUC,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAACP,YAAY,CAAC,IAAD,CAAb,CAAR;AACA,SAAOb,KAAK,CAACqB,IAAN,CAAY,GAAEb,OAAQ,QAAtB,EAA+B,EAAE,GAAGW;AAAL,GAA/B,EACLG,IADK,CACCC,IAAD,IAAU;AACf;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,OAAjB,EAFe,CAGf;AACA;AACA;AACA;AACA;AACA,GATK,EAULN,KAVK,CAUC,CAAC;AAACC,IAAAA,QAAQ,EAAE;AAACH,MAAAA;AAAD,KAAX;AAAmBI,IAAAA;AAAnB,GAAD,KAAiC,CACvC;AACA;AACA;AACA,GAdK,CAAP;AAeA,CAjBM;AAmBP,OAAO,MAAMK,MAAM,GAAG,MAAMZ,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AACA,CAFM","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport { LOGIN_USER, SIGNUP_USER, USER_ERROR, SET_STATUS, LOGOUT } from '../actions/types';\nimport setStorage from '../helpers/setStorage';\nimport {baseUrl} from '../baseUrl';\n\n\nconst signinUserAction = (payload) => ({ type: LOGIN_USER, payload });\nconst signupUserAction = (payload) => ({ type: SIGNUP_USER, payload });\nexport const loaderAction = (status) => ({type: SET_STATUS, status})\nexport const authError = (error) => ({ type: USER_ERROR, error});\nexport const logoutAction = () => ({ type: LOGOUT });;\n\nexport const signinUser = (user)  => dispatch => {\n\tdispatch(loaderAction(true));\n\treturn axios.post(`${baseUrl}/auth`, {...user} )\n\t\t.then(({data}) => {\n\t\t\tsetStorage('token', data.token);\n\t\t\tconst payload = jwtDecode(data.token);\n\t\t\tdispatch(signinUserAction(payload));\n\t\t\tdispatch(loaderAction(false));\n\t\t})\n\t\t.catch(({response: {data}, message}) => {\n\t\t\ttoastr.error(data.message);\n\t\t\tdispatch(authError(message));\n\t\t\tdispatch(loaderAction(false));\n\t\t});\n};\n\nexport const signupUser = (user) => dispatch => {\n\tdispatch(loaderAction(true));\n\treturn axios.post(`${baseUrl}/auth/`, { ...user })\n\t\t.then((data) => {\n\t\t\tdebugger\n\t\t\tconsole.log(data.headers)\n\t\t\t// debugger\n\t\t\t// setStorage('token', data.token);\n\t\t\t// const payload = jwtDecode(data.token);\n\t\t\t// dispatch(signupUserAction(payload));\n\t\t\t// dispatch(loaderAction(false));\n\t\t})\n\t\t.catch(({response: {data}, message}) => {\n\t\t\t// toastr.error(data.message);\n\t\t\t// dispatch(authError(message));\n\t\t\t// dispatch(loaderAction(false));\n\t\t});\n};\n\nexport const logout = () => dispatch => {\n\tdispatch(logoutAction());\n};\n"]},"metadata":{},"sourceType":"module"}